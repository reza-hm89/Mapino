#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TerendCmsDB")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBackupTable(BackupTable instance);
  partial void UpdateBackupTable(BackupTable instance);
  partial void DeleteBackupTable(BackupTable instance);
  partial void InsertErrorTable(ErrorTable instance);
  partial void UpdateErrorTable(ErrorTable instance);
  partial void DeleteErrorTable(ErrorTable instance);
  partial void InsertLanguageTable(LanguageTable instance);
  partial void UpdateLanguageTable(LanguageTable instance);
  partial void DeleteLanguageTable(LanguageTable instance);
  partial void InsertLogTable(LogTable instance);
  partial void UpdateLogTable(LogTable instance);
  partial void DeleteLogTable(LogTable instance);
  partial void InsertMessageTable(MessageTable instance);
  partial void UpdateMessageTable(MessageTable instance);
  partial void DeleteMessageTable(MessageTable instance);
  partial void InsertModuleTable(ModuleTable instance);
  partial void UpdateModuleTable(ModuleTable instance);
  partial void DeleteModuleTable(ModuleTable instance);
  partial void InsertPackageTable(PackageTable instance);
  partial void UpdatePackageTable(PackageTable instance);
  partial void DeletePackageTable(PackageTable instance);
  partial void InsertPermissionTable(PermissionTable instance);
  partial void UpdatePermissionTable(PermissionTable instance);
  partial void DeletePermissionTable(PermissionTable instance);
  partial void InsertPlacePicTable(PlacePicTable instance);
  partial void UpdatePlacePicTable(PlacePicTable instance);
  partial void DeletePlacePicTable(PlacePicTable instance);
  partial void InsertProductGroupTable1(ProductGroupTable1 instance);
  partial void UpdateProductGroupTable1(ProductGroupTable1 instance);
  partial void DeleteProductGroupTable1(ProductGroupTable1 instance);
  partial void InsertProductGroupTable2(ProductGroupTable2 instance);
  partial void UpdateProductGroupTable2(ProductGroupTable2 instance);
  partial void DeleteProductGroupTable2(ProductGroupTable2 instance);
  partial void InsertProductTable(ProductTable instance);
  partial void UpdateProductTable(ProductTable instance);
  partial void DeleteProductTable(ProductTable instance);
  partial void InsertRegionTable(RegionTable instance);
  partial void UpdateRegionTable(RegionTable instance);
  partial void DeleteRegionTable(RegionTable instance);
  partial void InsertSiteVisitTable(SiteVisitTable instance);
  partial void UpdateSiteVisitTable(SiteVisitTable instance);
  partial void DeleteSiteVisitTable(SiteVisitTable instance);
  partial void InsertSlideTable(SlideTable instance);
  partial void UpdateSlideTable(SlideTable instance);
  partial void DeleteSlideTable(SlideTable instance);
  partial void InsertUserGroupAccessTable(UserGroupAccessTable instance);
  partial void UpdateUserGroupAccessTable(UserGroupAccessTable instance);
  partial void DeleteUserGroupAccessTable(UserGroupAccessTable instance);
  partial void InsertUserGroupTable(UserGroupTable instance);
  partial void UpdateUserGroupTable(UserGroupTable instance);
  partial void DeleteUserGroupTable(UserGroupTable instance);
  partial void InsertUserTable(UserTable instance);
  partial void UpdateUserTable(UserTable instance);
  partial void DeleteUserTable(UserTable instance);
  partial void InsertVisitorTable(VisitorTable instance);
  partial void UpdateVisitorTable(VisitorTable instance);
  partial void DeleteVisitorTable(VisitorTable instance);
  partial void InsertWebsiteSettingTable(WebsiteSettingTable instance);
  partial void UpdateWebsiteSettingTable(WebsiteSettingTable instance);
  partial void DeleteWebsiteSettingTable(WebsiteSettingTable instance);
  partial void InsertWebUserTable(WebUserTable instance);
  partial void UpdateWebUserTable(WebUserTable instance);
  partial void DeleteWebUserTable(WebUserTable instance);
  partial void InsertUserAccountTypeTable(UserAccountTypeTable instance);
  partial void UpdateUserAccountTypeTable(UserAccountTypeTable instance);
  partial void DeleteUserAccountTypeTable(UserAccountTypeTable instance);
  partial void InsertWalletTable(WalletTable instance);
  partial void UpdateWalletTable(WalletTable instance);
  partial void DeleteWalletTable(WalletTable instance);
  partial void InsertPlaceTable(PlaceTable instance);
  partial void UpdatePlaceTable(PlaceTable instance);
  partial void DeletePlaceTable(PlaceTable instance);
  partial void InsertSmsTable(SmsTable instance);
  partial void UpdateSmsTable(SmsTable instance);
  partial void DeleteSmsTable(SmsTable instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TerendCmsDBConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<BackupTable> BackupTables
	{
		get
		{
			return this.GetTable<BackupTable>();
		}
	}
	
	public System.Data.Linq.Table<ErrorTable> ErrorTables
	{
		get
		{
			return this.GetTable<ErrorTable>();
		}
	}
	
	public System.Data.Linq.Table<LanguageTable> LanguageTables
	{
		get
		{
			return this.GetTable<LanguageTable>();
		}
	}
	
	public System.Data.Linq.Table<LogTable> LogTables
	{
		get
		{
			return this.GetTable<LogTable>();
		}
	}
	
	public System.Data.Linq.Table<MessageTable> MessageTables
	{
		get
		{
			return this.GetTable<MessageTable>();
		}
	}
	
	public System.Data.Linq.Table<ModuleTable> ModuleTables
	{
		get
		{
			return this.GetTable<ModuleTable>();
		}
	}
	
	public System.Data.Linq.Table<PackageTable> PackageTables
	{
		get
		{
			return this.GetTable<PackageTable>();
		}
	}
	
	public System.Data.Linq.Table<PermissionTable> PermissionTables
	{
		get
		{
			return this.GetTable<PermissionTable>();
		}
	}
	
	public System.Data.Linq.Table<PlacePicTable> PlacePicTables
	{
		get
		{
			return this.GetTable<PlacePicTable>();
		}
	}
	
	public System.Data.Linq.Table<ProductGroupTable1> ProductGroupTable1s
	{
		get
		{
			return this.GetTable<ProductGroupTable1>();
		}
	}
	
	public System.Data.Linq.Table<ProductGroupTable2> ProductGroupTable2s
	{
		get
		{
			return this.GetTable<ProductGroupTable2>();
		}
	}
	
	public System.Data.Linq.Table<ProductTable> ProductTables
	{
		get
		{
			return this.GetTable<ProductTable>();
		}
	}
	
	public System.Data.Linq.Table<RegionTable> RegionTables
	{
		get
		{
			return this.GetTable<RegionTable>();
		}
	}
	
	public System.Data.Linq.Table<SiteVisitTable> SiteVisitTables
	{
		get
		{
			return this.GetTable<SiteVisitTable>();
		}
	}
	
	public System.Data.Linq.Table<SlideTable> SlideTables
	{
		get
		{
			return this.GetTable<SlideTable>();
		}
	}
	
	public System.Data.Linq.Table<UserGroupAccessTable> UserGroupAccessTables
	{
		get
		{
			return this.GetTable<UserGroupAccessTable>();
		}
	}
	
	public System.Data.Linq.Table<UserGroupTable> UserGroupTables
	{
		get
		{
			return this.GetTable<UserGroupTable>();
		}
	}
	
	public System.Data.Linq.Table<UserTable> UserTables
	{
		get
		{
			return this.GetTable<UserTable>();
		}
	}
	
	public System.Data.Linq.Table<VisitorTable> VisitorTables
	{
		get
		{
			return this.GetTable<VisitorTable>();
		}
	}
	
	public System.Data.Linq.Table<WebsiteSettingTable> WebsiteSettingTables
	{
		get
		{
			return this.GetTable<WebsiteSettingTable>();
		}
	}
	
	public System.Data.Linq.Table<WebUserTable> WebUserTables
	{
		get
		{
			return this.GetTable<WebUserTable>();
		}
	}
	
	public System.Data.Linq.Table<UserAccountTypeTable> UserAccountTypeTables
	{
		get
		{
			return this.GetTable<UserAccountTypeTable>();
		}
	}
	
	public System.Data.Linq.Table<WalletTable> WalletTables
	{
		get
		{
			return this.GetTable<WalletTable>();
		}
	}
	
	public System.Data.Linq.Table<PlaceTable> PlaceTables
	{
		get
		{
			return this.GetTable<PlaceTable>();
		}
	}
	
	public System.Data.Linq.Table<SmsTable> SmsTables
	{
		get
		{
			return this.GetTable<SmsTable>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BackupTable")]
public partial class BackupTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<long> _UserID;
	
	private string _Path;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public BackupTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(MAX)")]
	public string Path
	{
		get
		{
			return this._Path;
		}
		set
		{
			if ((this._Path != value))
			{
				this.OnPathChanging(value);
				this.SendPropertyChanging();
				this._Path = value;
				this.SendPropertyChanged("Path");
				this.OnPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorTable")]
public partial class ErrorTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Title;
	
	private string _Detail;
	
	private string _Date;
	
	private string _Username;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    #endregion
	
	public ErrorTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Detail
	{
		get
		{
			return this._Detail;
		}
		set
		{
			if ((this._Detail != value))
			{
				this.OnDetailChanging(value);
				this.SendPropertyChanging();
				this._Detail = value;
				this.SendPropertyChanged("Detail");
				this.OnDetailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(MAX)")]
	public string Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LanguageTable")]
public partial class LanguageTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Icon;
	
	private string _Link;
	
	private string _OpenLink;
	
	private System.Nullable<bool> _Visibility;
	
	private string _Code;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnOpenLinkChanging(string value);
    partial void OnOpenLinkChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
	
	public LanguageTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(MAX)")]
	public string Icon
	{
		get
		{
			return this._Icon;
		}
		set
		{
			if ((this._Icon != value))
			{
				this.OnIconChanging(value);
				this.SendPropertyChanging();
				this._Icon = value;
				this.SendPropertyChanged("Icon");
				this.OnIconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenLink", DbType="NVarChar(50)")]
	public string OpenLink
	{
		get
		{
			return this._OpenLink;
		}
		set
		{
			if ((this._OpenLink != value))
			{
				this.OnOpenLinkChanging(value);
				this.SendPropertyChanging();
				this._OpenLink = value;
				this.SendPropertyChanged("OpenLink");
				this.OnOpenLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX)")]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogTable")]
public partial class LogTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _Operation;
	
	private string _Details;
	
	private string _Ip;
	
	private System.Nullable<long> _WebUserID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnOperationChanging(string value);
    partial void OnOperationChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnWebUserIDChanging(System.Nullable<long> value);
    partial void OnWebUserIDChanged();
    #endregion
	
	public LogTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation", DbType="NVarChar(50)")]
	public string Operation
	{
		get
		{
			return this._Operation;
		}
		set
		{
			if ((this._Operation != value))
			{
				this.OnOperationChanging(value);
				this.SendPropertyChanging();
				this._Operation = value;
				this.SendPropertyChanged("Operation");
				this.OnOperationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Details
	{
		get
		{
			return this._Details;
		}
		set
		{
			if ((this._Details != value))
			{
				this.OnDetailsChanging(value);
				this.SendPropertyChanging();
				this._Details = value;
				this.SendPropertyChanged("Details");
				this.OnDetailsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(50)")]
	public string Ip
	{
		get
		{
			return this._Ip;
		}
		set
		{
			if ((this._Ip != value))
			{
				this.OnIpChanging(value);
				this.SendPropertyChanging();
				this._Ip = value;
				this.SendPropertyChanged("Ip");
				this.OnIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebUserID", DbType="BigInt")]
	public System.Nullable<long> WebUserID
	{
		get
		{
			return this._WebUserID;
		}
		set
		{
			if ((this._WebUserID != value))
			{
				this.OnWebUserIDChanging(value);
				this.SendPropertyChanging();
				this._WebUserID = value;
				this.SendPropertyChanged("WebUserID");
				this.OnWebUserIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageTable")]
public partial class MessageTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Mobile;
	
	private string _Email;
	
	private string _Title;
	
	private string _Body;
	
	private System.Nullable<System.DateTime> _SendDate;
	
	private string _UserIp;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<long> _UserGroupID;
	
	private System.Nullable<int> _UnitID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnUserIpChanging(string value);
    partial void OnUserIpChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnUserGroupIDChanging(System.Nullable<long> value);
    partial void OnUserGroupIDChanged();
    partial void OnUnitIDChanging(System.Nullable<int> value);
    partial void OnUnitIDChanged();
    #endregion
	
	public MessageTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(MAX)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Body
	{
		get
		{
			return this._Body;
		}
		set
		{
			if ((this._Body != value))
			{
				this.OnBodyChanging(value);
				this.SendPropertyChanging();
				this._Body = value;
				this.SendPropertyChanged("Body");
				this.OnBodyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SendDate
	{
		get
		{
			return this._SendDate;
		}
		set
		{
			if ((this._SendDate != value))
			{
				this.OnSendDateChanging(value);
				this.SendPropertyChanging();
				this._SendDate = value;
				this.SendPropertyChanged("SendDate");
				this.OnSendDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIp", DbType="NVarChar(50)")]
	public string UserIp
	{
		get
		{
			return this._UserIp;
		}
		set
		{
			if ((this._UserIp != value))
			{
				this.OnUserIpChanging(value);
				this.SendPropertyChanging();
				this._UserIp = value;
				this.SendPropertyChanged("UserIp");
				this.OnUserIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupID", DbType="BigInt")]
	public System.Nullable<long> UserGroupID
	{
		get
		{
			return this._UserGroupID;
		}
		set
		{
			if ((this._UserGroupID != value))
			{
				this.OnUserGroupIDChanging(value);
				this.SendPropertyChanging();
				this._UserGroupID = value;
				this.SendPropertyChanged("UserGroupID");
				this.OnUserGroupIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int")]
	public System.Nullable<int> UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModuleTable")]
public partial class ModuleTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _MenuContent;
	
	private string _MenuScript;
	
	private EntitySet<PermissionTable> _PermissionTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMenuContentChanging(string value);
    partial void OnMenuContentChanged();
    partial void OnMenuScriptChanging(string value);
    partial void OnMenuScriptChanged();
    #endregion
	
	public ModuleTable()
	{
		this._PermissionTables = new EntitySet<PermissionTable>(new Action<PermissionTable>(this.attach_PermissionTables), new Action<PermissionTable>(this.detach_PermissionTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MenuContent
	{
		get
		{
			return this._MenuContent;
		}
		set
		{
			if ((this._MenuContent != value))
			{
				this.OnMenuContentChanging(value);
				this.SendPropertyChanging();
				this._MenuContent = value;
				this.SendPropertyChanged("MenuContent");
				this.OnMenuContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuScript", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MenuScript
	{
		get
		{
			return this._MenuScript;
		}
		set
		{
			if ((this._MenuScript != value))
			{
				this.OnMenuScriptChanging(value);
				this.SendPropertyChanging();
				this._MenuScript = value;
				this.SendPropertyChanged("MenuScript");
				this.OnMenuScriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModuleTable_PermissionTable", Storage="_PermissionTables", ThisKey="Id", OtherKey="ModuleID")]
	public EntitySet<PermissionTable> PermissionTables
	{
		get
		{
			return this._PermissionTables;
		}
		set
		{
			this._PermissionTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.ModuleTable = this;
	}
	
	private void detach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.ModuleTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackageTable")]
public partial class PackageTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<long> _Price;
	
	private System.Nullable<long> _Discount;
	
	private System.Nullable<byte> _Percent;
	
	private System.Nullable<byte> _Expire;
	
	private string _Description;
	
	private System.Nullable<bool> _Visibility;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private string _Status;
	
	private string _MinResponse;
	
	private string _MaxResponse;
	
	private System.Nullable<bool> _IsExpert;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnDiscountChanging(System.Nullable<long> value);
    partial void OnDiscountChanged();
    partial void OnPercentChanging(System.Nullable<byte> value);
    partial void OnPercentChanged();
    partial void OnExpireChanging(System.Nullable<byte> value);
    partial void OnExpireChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnMinResponseChanging(string value);
    partial void OnMinResponseChanged();
    partial void OnMaxResponseChanging(string value);
    partial void OnMaxResponseChanged();
    partial void OnIsExpertChanging(System.Nullable<bool> value);
    partial void OnIsExpertChanged();
    #endregion
	
	public PackageTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
	public System.Nullable<long> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="BigInt")]
	public System.Nullable<long> Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Percent]", Storage="_Percent", DbType="TinyInt")]
	public System.Nullable<byte> Percent
	{
		get
		{
			return this._Percent;
		}
		set
		{
			if ((this._Percent != value))
			{
				this.OnPercentChanging(value);
				this.SendPropertyChanging();
				this._Percent = value;
				this.SendPropertyChanged("Percent");
				this.OnPercentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expire", DbType="TinyInt")]
	public System.Nullable<byte> Expire
	{
		get
		{
			return this._Expire;
		}
		set
		{
			if ((this._Expire != value))
			{
				this.OnExpireChanging(value);
				this.SendPropertyChanging();
				this._Expire = value;
				this.SendPropertyChanged("Expire");
				this.OnExpireChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinResponse", DbType="NVarChar(50)")]
	public string MinResponse
	{
		get
		{
			return this._MinResponse;
		}
		set
		{
			if ((this._MinResponse != value))
			{
				this.OnMinResponseChanging(value);
				this.SendPropertyChanging();
				this._MinResponse = value;
				this.SendPropertyChanged("MinResponse");
				this.OnMinResponseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxResponse", DbType="NVarChar(50)")]
	public string MaxResponse
	{
		get
		{
			return this._MaxResponse;
		}
		set
		{
			if ((this._MaxResponse != value))
			{
				this.OnMaxResponseChanging(value);
				this.SendPropertyChanging();
				this._MaxResponse = value;
				this.SendPropertyChanged("MaxResponse");
				this.OnMaxResponseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExpert", DbType="Bit")]
	public System.Nullable<bool> IsExpert
	{
		get
		{
			return this._IsExpert;
		}
		set
		{
			if ((this._IsExpert != value))
			{
				this.OnIsExpertChanging(value);
				this.SendPropertyChanging();
				this._IsExpert = value;
				this.SendPropertyChanged("IsExpert");
				this.OnIsExpertChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PermissionTable")]
public partial class PermissionTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<long> _GroupID;
	
	private int _ModuleID;
	
	private bool _Show;
	
	private bool _Insert;
	
	private bool _Update;
	
	private bool _Delete;
	
	private EntityRef<ModuleTable> _ModuleTable;
	
	private EntityRef<UserGroupTable> _UserGroupTable;
	
	private EntityRef<UserTable> _UserTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnGroupIDChanging(System.Nullable<long> value);
    partial void OnGroupIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnShowChanging(bool value);
    partial void OnShowChanged();
    partial void OnInsertChanging(bool value);
    partial void OnInsertChanged();
    partial void OnUpdateChanging(bool value);
    partial void OnUpdateChanged();
    partial void OnDeleteChanging(bool value);
    partial void OnDeleteChanged();
    #endregion
	
	public PermissionTable()
	{
		this._ModuleTable = default(EntityRef<ModuleTable>);
		this._UserGroupTable = default(EntityRef<UserGroupTable>);
		this._UserTable = default(EntityRef<UserTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._UserTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="BigInt")]
	public System.Nullable<long> GroupID
	{
		get
		{
			return this._GroupID;
		}
		set
		{
			if ((this._GroupID != value))
			{
				if (this._UserGroupTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGroupIDChanging(value);
				this.SendPropertyChanging();
				this._GroupID = value;
				this.SendPropertyChanged("GroupID");
				this.OnGroupIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
	public int ModuleID
	{
		get
		{
			return this._ModuleID;
		}
		set
		{
			if ((this._ModuleID != value))
			{
				if (this._ModuleTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModuleIDChanging(value);
				this.SendPropertyChanging();
				this._ModuleID = value;
				this.SendPropertyChanged("ModuleID");
				this.OnModuleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
	public bool Show
	{
		get
		{
			return this._Show;
		}
		set
		{
			if ((this._Show != value))
			{
				this.OnShowChanging(value);
				this.SendPropertyChanging();
				this._Show = value;
				this.SendPropertyChanged("Show");
				this.OnShowChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Insert]", Storage="_Insert", DbType="Bit NOT NULL")]
	public bool Insert
	{
		get
		{
			return this._Insert;
		}
		set
		{
			if ((this._Insert != value))
			{
				this.OnInsertChanging(value);
				this.SendPropertyChanging();
				this._Insert = value;
				this.SendPropertyChanged("Insert");
				this.OnInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Update]", Storage="_Update", DbType="Bit NOT NULL")]
	public bool Update
	{
		get
		{
			return this._Update;
		}
		set
		{
			if ((this._Update != value))
			{
				this.OnUpdateChanging(value);
				this.SendPropertyChanging();
				this._Update = value;
				this.SendPropertyChanged("Update");
				this.OnUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Delete]", Storage="_Delete", DbType="Bit NOT NULL")]
	public bool Delete
	{
		get
		{
			return this._Delete;
		}
		set
		{
			if ((this._Delete != value))
			{
				this.OnDeleteChanging(value);
				this.SendPropertyChanging();
				this._Delete = value;
				this.SendPropertyChanged("Delete");
				this.OnDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModuleTable_PermissionTable", Storage="_ModuleTable", ThisKey="ModuleID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public ModuleTable ModuleTable
	{
		get
		{
			return this._ModuleTable.Entity;
		}
		set
		{
			ModuleTable previousValue = this._ModuleTable.Entity;
			if (((previousValue != value) 
						|| (this._ModuleTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ModuleTable.Entity = null;
					previousValue.PermissionTables.Remove(this);
				}
				this._ModuleTable.Entity = value;
				if ((value != null))
				{
					value.PermissionTables.Add(this);
					this._ModuleID = value.Id;
				}
				else
				{
					this._ModuleID = default(int);
				}
				this.SendPropertyChanged("ModuleTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroupTable_PermissionTable", Storage="_UserGroupTable", ThisKey="GroupID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public UserGroupTable UserGroupTable
	{
		get
		{
			return this._UserGroupTable.Entity;
		}
		set
		{
			UserGroupTable previousValue = this._UserGroupTable.Entity;
			if (((previousValue != value) 
						|| (this._UserGroupTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserGroupTable.Entity = null;
					previousValue.PermissionTables.Remove(this);
				}
				this._UserGroupTable.Entity = value;
				if ((value != null))
				{
					value.PermissionTables.Add(this);
					this._GroupID = value.Id;
				}
				else
				{
					this._GroupID = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserGroupTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTable_PermissionTable", Storage="_UserTable", ThisKey="UserID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public UserTable UserTable
	{
		get
		{
			return this._UserTable.Entity;
		}
		set
		{
			UserTable previousValue = this._UserTable.Entity;
			if (((previousValue != value) 
						|| (this._UserTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserTable.Entity = null;
					previousValue.PermissionTables.Remove(this);
				}
				this._UserTable.Entity = value;
				if ((value != null))
				{
					value.PermissionTables.Add(this);
					this._UserID = value.Id;
				}
				else
				{
					this._UserID = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlacePicTable")]
public partial class PlacePicTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Image;
	
	private string _Alt;
	
	private System.Nullable<long> _PlaceID;
	
	private EntityRef<PlaceTable> _PlaceTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnAltChanging(string value);
    partial void OnAltChanged();
    partial void OnPlaceIDChanging(System.Nullable<long> value);
    partial void OnPlaceIDChanged();
    #endregion
	
	public PlacePicTable()
	{
		this._PlaceTable = default(EntityRef<PlaceTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt", DbType="NVarChar(MAX)")]
	public string Alt
	{
		get
		{
			return this._Alt;
		}
		set
		{
			if ((this._Alt != value))
			{
				this.OnAltChanging(value);
				this.SendPropertyChanging();
				this._Alt = value;
				this.SendPropertyChanged("Alt");
				this.OnAltChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceID", DbType="BigInt")]
	public System.Nullable<long> PlaceID
	{
		get
		{
			return this._PlaceID;
		}
		set
		{
			if ((this._PlaceID != value))
			{
				if (this._PlaceTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPlaceIDChanging(value);
				this.SendPropertyChanging();
				this._PlaceID = value;
				this.SendPropertyChanged("PlaceID");
				this.OnPlaceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlaceTable_PlacePicTable", Storage="_PlaceTable", ThisKey="PlaceID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public PlaceTable PlaceTable
	{
		get
		{
			return this._PlaceTable.Entity;
		}
		set
		{
			PlaceTable previousValue = this._PlaceTable.Entity;
			if (((previousValue != value) 
						|| (this._PlaceTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PlaceTable.Entity = null;
					previousValue.PlacePicTables.Remove(this);
				}
				this._PlaceTable.Entity = value;
				if ((value != null))
				{
					value.PlacePicTables.Add(this);
					this._PlaceID = value.Id;
				}
				else
				{
					this._PlaceID = default(Nullable<long>);
				}
				this.SendPropertyChanged("PlaceTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductGroupTable1")]
public partial class ProductGroupTable1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Link;
	
	private string _OpenLink;
	
	private System.Nullable<long> _Priority;
	
	private bool _Visibility;
	
	private System.Nullable<long> _LanguageID;
	
	private string _Image;
	
	private string _Description;
	
	private EntitySet<ProductGroupTable2> _ProductGroupTable2s;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnOpenLinkChanging(string value);
    partial void OnOpenLinkChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    partial void OnVisibilityChanging(bool value);
    partial void OnVisibilityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public ProductGroupTable1()
	{
		this._ProductGroupTable2s = new EntitySet<ProductGroupTable2>(new Action<ProductGroupTable2>(this.attach_ProductGroupTable2s), new Action<ProductGroupTable2>(this.detach_ProductGroupTable2s));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenLink", DbType="NVarChar(MAX)")]
	public string OpenLink
	{
		get
		{
			return this._OpenLink;
		}
		set
		{
			if ((this._OpenLink != value))
			{
				this.OnOpenLinkChanging(value);
				this.SendPropertyChanging();
				this._OpenLink = value;
				this.SendPropertyChanged("OpenLink");
				this.OnOpenLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit NOT NULL")]
	public bool Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductGroupTable1_ProductGroupTable2", Storage="_ProductGroupTable2s", ThisKey="Id", OtherKey="GroupID1")]
	public EntitySet<ProductGroupTable2> ProductGroupTable2s
	{
		get
		{
			return this._ProductGroupTable2s;
		}
		set
		{
			this._ProductGroupTable2s.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ProductGroupTable2s(ProductGroupTable2 entity)
	{
		this.SendPropertyChanging();
		entity.ProductGroupTable1 = this;
	}
	
	private void detach_ProductGroupTable2s(ProductGroupTable2 entity)
	{
		this.SendPropertyChanging();
		entity.ProductGroupTable1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductGroupTable2")]
public partial class ProductGroupTable2 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<long> _Parent;
	
	private string _Link;
	
	private string _OpenLink;
	
	private System.Nullable<long> _Priority;
	
	private bool _Visibility;
	
	private System.Nullable<long> _LanguageID;
	
	private System.Nullable<long> _GroupID1;
	
	private EntityRef<ProductGroupTable1> _ProductGroupTable1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentChanging(System.Nullable<long> value);
    partial void OnParentChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnOpenLinkChanging(string value);
    partial void OnOpenLinkChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    partial void OnVisibilityChanging(bool value);
    partial void OnVisibilityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnGroupID1Changing(System.Nullable<long> value);
    partial void OnGroupID1Changed();
    #endregion
	
	public ProductGroupTable2()
	{
		this._ProductGroupTable1 = default(EntityRef<ProductGroupTable1>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="BigInt")]
	public System.Nullable<long> Parent
	{
		get
		{
			return this._Parent;
		}
		set
		{
			if ((this._Parent != value))
			{
				this.OnParentChanging(value);
				this.SendPropertyChanging();
				this._Parent = value;
				this.SendPropertyChanged("Parent");
				this.OnParentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenLink", DbType="NVarChar(MAX)")]
	public string OpenLink
	{
		get
		{
			return this._OpenLink;
		}
		set
		{
			if ((this._OpenLink != value))
			{
				this.OnOpenLinkChanging(value);
				this.SendPropertyChanging();
				this._OpenLink = value;
				this.SendPropertyChanged("OpenLink");
				this.OnOpenLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit NOT NULL")]
	public bool Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID1", DbType="BigInt")]
	public System.Nullable<long> GroupID1
	{
		get
		{
			return this._GroupID1;
		}
		set
		{
			if ((this._GroupID1 != value))
			{
				if (this._ProductGroupTable1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGroupID1Changing(value);
				this.SendPropertyChanging();
				this._GroupID1 = value;
				this.SendPropertyChanged("GroupID1");
				this.OnGroupID1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductGroupTable1_ProductGroupTable2", Storage="_ProductGroupTable1", ThisKey="GroupID1", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public ProductGroupTable1 ProductGroupTable1
	{
		get
		{
			return this._ProductGroupTable1.Entity;
		}
		set
		{
			ProductGroupTable1 previousValue = this._ProductGroupTable1.Entity;
			if (((previousValue != value) 
						|| (this._ProductGroupTable1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProductGroupTable1.Entity = null;
					previousValue.ProductGroupTable2s.Remove(this);
				}
				this._ProductGroupTable1.Entity = value;
				if ((value != null))
				{
					value.ProductGroupTable2s.Add(this);
					this._GroupID1 = value.Id;
				}
				else
				{
					this._GroupID1 = default(Nullable<long>);
				}
				this.SendPropertyChanged("ProductGroupTable1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductTable")]
public partial class ProductTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<bool> _Special;
	
	private System.Nullable<long> _GroupID2;
	
	private string _Description;
	
	private System.Nullable<bool> _InBasket;
	
	private System.Nullable<int> _PriceKind;
	
	private System.Nullable<long> _Price;
	
	private System.Nullable<long> _Discount;
	
	private System.Nullable<long> _Priority;
	
	private System.Nullable<bool> _Availability;
	
	private System.Nullable<bool> _Visibility;
	
	private System.Nullable<long> _LanguageID;
	
	private string _Details;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private System.Nullable<long> _View;
	
	private System.Nullable<double> _Rate;
	
	private System.Nullable<System.DateTime> _EditDate;
	
	private System.Nullable<long> _UserID;
	
	private string _Code;
	
	private string _TagName;
	
	private System.Nullable<long> _SalesCount;
	
	private System.Nullable<long> _GroupID1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSpecialChanging(System.Nullable<bool> value);
    partial void OnSpecialChanged();
    partial void OnGroupID2Changing(System.Nullable<long> value);
    partial void OnGroupID2Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnInBasketChanging(System.Nullable<bool> value);
    partial void OnInBasketChanged();
    partial void OnPriceKindChanging(System.Nullable<int> value);
    partial void OnPriceKindChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnDiscountChanging(System.Nullable<long> value);
    partial void OnDiscountChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    partial void OnAvailabilityChanging(System.Nullable<bool> value);
    partial void OnAvailabilityChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnViewChanging(System.Nullable<long> value);
    partial void OnViewChanged();
    partial void OnRateChanging(System.Nullable<double> value);
    partial void OnRateChanged();
    partial void OnEditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEditDateChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTagNameChanging(string value);
    partial void OnTagNameChanged();
    partial void OnSalesCountChanging(System.Nullable<long> value);
    partial void OnSalesCountChanged();
    partial void OnGroupID1Changing(System.Nullable<long> value);
    partial void OnGroupID1Changed();
    #endregion
	
	public ProductTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Special", DbType="Bit")]
	public System.Nullable<bool> Special
	{
		get
		{
			return this._Special;
		}
		set
		{
			if ((this._Special != value))
			{
				this.OnSpecialChanging(value);
				this.SendPropertyChanging();
				this._Special = value;
				this.SendPropertyChanged("Special");
				this.OnSpecialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID2", DbType="BigInt")]
	public System.Nullable<long> GroupID2
	{
		get
		{
			return this._GroupID2;
		}
		set
		{
			if ((this._GroupID2 != value))
			{
				this.OnGroupID2Changing(value);
				this.SendPropertyChanging();
				this._GroupID2 = value;
				this.SendPropertyChanged("GroupID2");
				this.OnGroupID2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InBasket", DbType="Bit")]
	public System.Nullable<bool> InBasket
	{
		get
		{
			return this._InBasket;
		}
		set
		{
			if ((this._InBasket != value))
			{
				this.OnInBasketChanging(value);
				this.SendPropertyChanging();
				this._InBasket = value;
				this.SendPropertyChanged("InBasket");
				this.OnInBasketChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceKind", DbType="Int")]
	public System.Nullable<int> PriceKind
	{
		get
		{
			return this._PriceKind;
		}
		set
		{
			if ((this._PriceKind != value))
			{
				this.OnPriceKindChanging(value);
				this.SendPropertyChanging();
				this._PriceKind = value;
				this.SendPropertyChanged("PriceKind");
				this.OnPriceKindChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
	public System.Nullable<long> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="BigInt")]
	public System.Nullable<long> Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Availability", DbType="Bit")]
	public System.Nullable<bool> Availability
	{
		get
		{
			return this._Availability;
		}
		set
		{
			if ((this._Availability != value))
			{
				this.OnAvailabilityChanging(value);
				this.SendPropertyChanging();
				this._Availability = value;
				this.SendPropertyChanged("Availability");
				this.OnAvailabilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Details
	{
		get
		{
			return this._Details;
		}
		set
		{
			if ((this._Details != value))
			{
				this.OnDetailsChanging(value);
				this.SendPropertyChanging();
				this._Details = value;
				this.SendPropertyChanged("Details");
				this.OnDetailsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[View]", Storage="_View", DbType="BigInt")]
	public System.Nullable<long> View
	{
		get
		{
			return this._View;
		}
		set
		{
			if ((this._View != value))
			{
				this.OnViewChanging(value);
				this.SendPropertyChanging();
				this._View = value;
				this.SendPropertyChanged("View");
				this.OnViewChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Float")]
	public System.Nullable<double> Rate
	{
		get
		{
			return this._Rate;
		}
		set
		{
			if ((this._Rate != value))
			{
				this.OnRateChanging(value);
				this.SendPropertyChanging();
				this._Rate = value;
				this.SendPropertyChanged("Rate");
				this.OnRateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> EditDate
	{
		get
		{
			return this._EditDate;
		}
		set
		{
			if ((this._EditDate != value))
			{
				this.OnEditDateChanging(value);
				this.SendPropertyChanging();
				this._EditDate = value;
				this.SendPropertyChanged("EditDate");
				this.OnEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX)")]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagName", DbType="NVarChar(MAX)")]
	public string TagName
	{
		get
		{
			return this._TagName;
		}
		set
		{
			if ((this._TagName != value))
			{
				this.OnTagNameChanging(value);
				this.SendPropertyChanging();
				this._TagName = value;
				this.SendPropertyChanged("TagName");
				this.OnTagNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCount", DbType="BigInt")]
	public System.Nullable<long> SalesCount
	{
		get
		{
			return this._SalesCount;
		}
		set
		{
			if ((this._SalesCount != value))
			{
				this.OnSalesCountChanging(value);
				this.SendPropertyChanging();
				this._SalesCount = value;
				this.SendPropertyChanged("SalesCount");
				this.OnSalesCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID1", DbType="BigInt")]
	public System.Nullable<long> GroupID1
	{
		get
		{
			return this._GroupID1;
		}
		set
		{
			if ((this._GroupID1 != value))
			{
				this.OnGroupID1Changing(value);
				this.SendPropertyChanging();
				this._GroupID1 = value;
				this.SendPropertyChanged("GroupID1");
				this.OnGroupID1Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegionTable")]
public partial class RegionTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<long> _Parent;
	
	private string _Position;
	
	private System.Nullable<long> _Priority;
	
	private System.Nullable<bool> _Visibility;
	
	private System.Nullable<long> _LanguageID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentChanging(System.Nullable<long> value);
    partial void OnParentChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    #endregion
	
	public RegionTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="BigInt")]
	public System.Nullable<long> Parent
	{
		get
		{
			return this._Parent;
		}
		set
		{
			if ((this._Parent != value))
			{
				this.OnParentChanging(value);
				this.SendPropertyChanging();
				this._Parent = value;
				this.SendPropertyChanged("Parent");
				this.OnParentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(MAX)")]
	public string Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this.OnPositionChanging(value);
				this.SendPropertyChanging();
				this._Position = value;
				this.SendPropertyChanged("Position");
				this.OnPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteVisitTable")]
public partial class SiteVisitTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _View;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnViewChanging(System.Nullable<long> value);
    partial void OnViewChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public SiteVisitTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[View]", Storage="_View", DbType="BigInt")]
	public System.Nullable<long> View
	{
		get
		{
			return this._View;
		}
		set
		{
			if ((this._View != value))
			{
				this.OnViewChanging(value);
				this.SendPropertyChanging();
				this._View = value;
				this.SendPropertyChanged("View");
				this.OnViewChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SlideTable")]
public partial class SlideTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Image;
	
	private string _AlternativeText;
	
	private string _Link;
	
	private string _OpenLink;
	
	private System.Nullable<byte> _ShowTime;
	
	private System.Nullable<long> _Priority;
	
	private System.Nullable<long> _LanguageID;
	
	private bool _Visibility;
	
	private string _Title1;
	
	private string _Title2;
	
	private string _Title3;
	
	private System.Nullable<long> _UserID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnAlternativeTextChanging(string value);
    partial void OnAlternativeTextChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnOpenLinkChanging(string value);
    partial void OnOpenLinkChanged();
    partial void OnShowTimeChanging(System.Nullable<byte> value);
    partial void OnShowTimeChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnVisibilityChanging(bool value);
    partial void OnVisibilityChanged();
    partial void OnTitle1Changing(string value);
    partial void OnTitle1Changed();
    partial void OnTitle2Changing(string value);
    partial void OnTitle2Changed();
    partial void OnTitle3Changing(string value);
    partial void OnTitle3Changed();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    #endregion
	
	public SlideTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeText", DbType="NVarChar(MAX)")]
	public string AlternativeText
	{
		get
		{
			return this._AlternativeText;
		}
		set
		{
			if ((this._AlternativeText != value))
			{
				this.OnAlternativeTextChanging(value);
				this.SendPropertyChanging();
				this._AlternativeText = value;
				this.SendPropertyChanged("AlternativeText");
				this.OnAlternativeTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenLink", DbType="NVarChar(50)")]
	public string OpenLink
	{
		get
		{
			return this._OpenLink;
		}
		set
		{
			if ((this._OpenLink != value))
			{
				this.OnOpenLinkChanging(value);
				this.SendPropertyChanging();
				this._OpenLink = value;
				this.SendPropertyChanged("OpenLink");
				this.OnOpenLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTime", DbType="TinyInt")]
	public System.Nullable<byte> ShowTime
	{
		get
		{
			return this._ShowTime;
		}
		set
		{
			if ((this._ShowTime != value))
			{
				this.OnShowTimeChanging(value);
				this.SendPropertyChanging();
				this._ShowTime = value;
				this.SendPropertyChanged("ShowTime");
				this.OnShowTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit NOT NULL")]
	public bool Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title1", DbType="NVarChar(MAX)")]
	public string Title1
	{
		get
		{
			return this._Title1;
		}
		set
		{
			if ((this._Title1 != value))
			{
				this.OnTitle1Changing(value);
				this.SendPropertyChanging();
				this._Title1 = value;
				this.SendPropertyChanged("Title1");
				this.OnTitle1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title2", DbType="NVarChar(MAX)")]
	public string Title2
	{
		get
		{
			return this._Title2;
		}
		set
		{
			if ((this._Title2 != value))
			{
				this.OnTitle2Changing(value);
				this.SendPropertyChanging();
				this._Title2 = value;
				this.SendPropertyChanged("Title2");
				this.OnTitle2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title3", DbType="NVarChar(MAX)")]
	public string Title3
	{
		get
		{
			return this._Title3;
		}
		set
		{
			if ((this._Title3 != value))
			{
				this.OnTitle3Changing(value);
				this.SendPropertyChanging();
				this._Title3 = value;
				this.SendPropertyChanged("Title3");
				this.OnTitle3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroupAccessTable")]
public partial class UserGroupAccessTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private long _UserID;
	
	private long _GroupID;
	
	private EntityRef<UserGroupTable> _UserGroupTable;
	
	private EntityRef<UserTable> _UserTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnGroupIDChanging(long value);
    partial void OnGroupIDChanged();
    #endregion
	
	public UserGroupAccessTable()
	{
		this._UserGroupTable = default(EntityRef<UserGroupTable>);
		this._UserTable = default(EntityRef<UserTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
	public long UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._UserTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="BigInt NOT NULL")]
	public long GroupID
	{
		get
		{
			return this._GroupID;
		}
		set
		{
			if ((this._GroupID != value))
			{
				if (this._UserGroupTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGroupIDChanging(value);
				this.SendPropertyChanging();
				this._GroupID = value;
				this.SendPropertyChanged("GroupID");
				this.OnGroupIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroupTable_UserGroupAccessTable", Storage="_UserGroupTable", ThisKey="GroupID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public UserGroupTable UserGroupTable
	{
		get
		{
			return this._UserGroupTable.Entity;
		}
		set
		{
			UserGroupTable previousValue = this._UserGroupTable.Entity;
			if (((previousValue != value) 
						|| (this._UserGroupTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserGroupTable.Entity = null;
					previousValue.UserGroupAccessTables.Remove(this);
				}
				this._UserGroupTable.Entity = value;
				if ((value != null))
				{
					value.UserGroupAccessTables.Add(this);
					this._GroupID = value.Id;
				}
				else
				{
					this._GroupID = default(long);
				}
				this.SendPropertyChanged("UserGroupTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTable_UserGroupAccessTable", Storage="_UserTable", ThisKey="UserID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public UserTable UserTable
	{
		get
		{
			return this._UserTable.Entity;
		}
		set
		{
			UserTable previousValue = this._UserTable.Entity;
			if (((previousValue != value) 
						|| (this._UserTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserTable.Entity = null;
					previousValue.UserGroupAccessTables.Remove(this);
				}
				this._UserTable.Entity = value;
				if ((value != null))
				{
					value.UserGroupAccessTables.Add(this);
					this._UserID = value.Id;
				}
				else
				{
					this._UserID = default(long);
				}
				this.SendPropertyChanged("UserTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroupTable")]
public partial class UserGroupTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private bool _Visibility;
	
	private EntitySet<PermissionTable> _PermissionTables;
	
	private EntitySet<UserGroupAccessTable> _UserGroupAccessTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVisibilityChanging(bool value);
    partial void OnVisibilityChanged();
    #endregion
	
	public UserGroupTable()
	{
		this._PermissionTables = new EntitySet<PermissionTable>(new Action<PermissionTable>(this.attach_PermissionTables), new Action<PermissionTable>(this.detach_PermissionTables));
		this._UserGroupAccessTables = new EntitySet<UserGroupAccessTable>(new Action<UserGroupAccessTable>(this.attach_UserGroupAccessTables), new Action<UserGroupAccessTable>(this.detach_UserGroupAccessTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit NOT NULL")]
	public bool Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroupTable_PermissionTable", Storage="_PermissionTables", ThisKey="Id", OtherKey="GroupID")]
	public EntitySet<PermissionTable> PermissionTables
	{
		get
		{
			return this._PermissionTables;
		}
		set
		{
			this._PermissionTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroupTable_UserGroupAccessTable", Storage="_UserGroupAccessTables", ThisKey="Id", OtherKey="GroupID")]
	public EntitySet<UserGroupAccessTable> UserGroupAccessTables
	{
		get
		{
			return this._UserGroupAccessTables;
		}
		set
		{
			this._UserGroupAccessTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.UserGroupTable = this;
	}
	
	private void detach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.UserGroupTable = null;
	}
	
	private void attach_UserGroupAccessTables(UserGroupAccessTable entity)
	{
		this.SendPropertyChanging();
		entity.UserGroupTable = this;
	}
	
	private void detach_UserGroupAccessTables(UserGroupAccessTable entity)
	{
		this.SendPropertyChanging();
		entity.UserGroupTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTable")]
public partial class UserTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Family;
	
	private string _Address;
	
	private string _Tel;
	
	private string _ImageUrl;
	
	private System.Nullable<System.DateTime> _Birthday;
	
	private System.Nullable<bool> _Gender;
	
	private string _ZipCode;
	
	private string _City;
	
	private string _Website;
	
	private string _Email;
	
	private string _Twitter;
	
	private string _Facebook;
	
	private string _GooglePlus;
	
	private string _Github;
	
	private string _Linkedin;
	
	private string _Skype;
	
	private string _Username;
	
	private string _Password;
	
	private System.Nullable<System.DateTime> _LoginDate;
	
	private System.Nullable<System.DateTime> _LogoutDate;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private string _Description;
	
	private System.Nullable<bool> _IsDelete;
	
	private string _Ip;
	
	private System.Nullable<bool> _EmailConfirmed;
	
	private System.Nullable<int> _AccessFailedCount;
	
	private System.Nullable<bool> _MobileConfirmed;
	
	private string _ChangePassRequestCode;
	
	private System.Nullable<System.DateTime> _ChangePassRequestDate;
	
	private System.Nullable<long> _ParentID;
	
	private string _CardNumber;
	
	private string _AccountNumber;
	
	private System.Nullable<long> _EmployeeID;
	
	private System.Nullable<long> _RegUserID;
	
	private EntitySet<PermissionTable> _PermissionTables;
	
	private EntitySet<UserGroupAccessTable> _UserGroupAccessTables;
	
	private EntitySet<WalletTable> _WalletTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTwitterChanging(string value);
    partial void OnTwitterChanged();
    partial void OnFacebookChanging(string value);
    partial void OnFacebookChanged();
    partial void OnGooglePlusChanging(string value);
    partial void OnGooglePlusChanged();
    partial void OnGithubChanging(string value);
    partial void OnGithubChanged();
    partial void OnLinkedinChanging(string value);
    partial void OnLinkedinChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginDateChanged();
    partial void OnLogoutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogoutDateChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnEmailConfirmedChanging(System.Nullable<bool> value);
    partial void OnEmailConfirmedChanged();
    partial void OnAccessFailedCountChanging(System.Nullable<int> value);
    partial void OnAccessFailedCountChanged();
    partial void OnMobileConfirmedChanging(System.Nullable<bool> value);
    partial void OnMobileConfirmedChanged();
    partial void OnChangePassRequestCodeChanging(string value);
    partial void OnChangePassRequestCodeChanged();
    partial void OnChangePassRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangePassRequestDateChanged();
    partial void OnParentIDChanging(System.Nullable<long> value);
    partial void OnParentIDChanged();
    partial void OnCardNumberChanging(string value);
    partial void OnCardNumberChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnEmployeeIDChanging(System.Nullable<long> value);
    partial void OnEmployeeIDChanged();
    partial void OnRegUserIDChanging(System.Nullable<long> value);
    partial void OnRegUserIDChanged();
    #endregion
	
	public UserTable()
	{
		this._PermissionTables = new EntitySet<PermissionTable>(new Action<PermissionTable>(this.attach_PermissionTables), new Action<PermissionTable>(this.detach_PermissionTables));
		this._UserGroupAccessTables = new EntitySet<UserGroupAccessTable>(new Action<UserGroupAccessTable>(this.attach_UserGroupAccessTables), new Action<UserGroupAccessTable>(this.detach_UserGroupAccessTables));
		this._WalletTables = new EntitySet<WalletTable>(new Action<WalletTable>(this.attach_WalletTables), new Action<WalletTable>(this.detach_WalletTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(MAX)")]
	public string Family
	{
		get
		{
			return this._Family;
		}
		set
		{
			if ((this._Family != value))
			{
				this.OnFamilyChanging(value);
				this.SendPropertyChanging();
				this._Family = value;
				this.SendPropertyChanged("Family");
				this.OnFamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(MAX)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(MAX)")]
	public string ImageUrl
	{
		get
		{
			return this._ImageUrl;
		}
		set
		{
			if ((this._ImageUrl != value))
			{
				this.OnImageUrlChanging(value);
				this.SendPropertyChanging();
				this._ImageUrl = value;
				this.SendPropertyChanged("ImageUrl");
				this.OnImageUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
	public System.Nullable<System.DateTime> Birthday
	{
		get
		{
			return this._Birthday;
		}
		set
		{
			if ((this._Birthday != value))
			{
				this.OnBirthdayChanging(value);
				this.SendPropertyChanging();
				this._Birthday = value;
				this.SendPropertyChanged("Birthday");
				this.OnBirthdayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
	public System.Nullable<bool> Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(MAX)")]
	public string ZipCode
	{
		get
		{
			return this._ZipCode;
		}
		set
		{
			if ((this._ZipCode != value))
			{
				this.OnZipCodeChanging(value);
				this.SendPropertyChanging();
				this._ZipCode = value;
				this.SendPropertyChanged("ZipCode");
				this.OnZipCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(MAX)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Twitter", DbType="NVarChar(MAX)")]
	public string Twitter
	{
		get
		{
			return this._Twitter;
		}
		set
		{
			if ((this._Twitter != value))
			{
				this.OnTwitterChanging(value);
				this.SendPropertyChanging();
				this._Twitter = value;
				this.SendPropertyChanged("Twitter");
				this.OnTwitterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facebook", DbType="NVarChar(MAX)")]
	public string Facebook
	{
		get
		{
			return this._Facebook;
		}
		set
		{
			if ((this._Facebook != value))
			{
				this.OnFacebookChanging(value);
				this.SendPropertyChanging();
				this._Facebook = value;
				this.SendPropertyChanged("Facebook");
				this.OnFacebookChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GooglePlus", DbType="NVarChar(MAX)")]
	public string GooglePlus
	{
		get
		{
			return this._GooglePlus;
		}
		set
		{
			if ((this._GooglePlus != value))
			{
				this.OnGooglePlusChanging(value);
				this.SendPropertyChanging();
				this._GooglePlus = value;
				this.SendPropertyChanged("GooglePlus");
				this.OnGooglePlusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Github", DbType="NVarChar(MAX)")]
	public string Github
	{
		get
		{
			return this._Github;
		}
		set
		{
			if ((this._Github != value))
			{
				this.OnGithubChanging(value);
				this.SendPropertyChanging();
				this._Github = value;
				this.SendPropertyChanged("Github");
				this.OnGithubChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Linkedin", DbType="NVarChar(MAX)")]
	public string Linkedin
	{
		get
		{
			return this._Linkedin;
		}
		set
		{
			if ((this._Linkedin != value))
			{
				this.OnLinkedinChanging(value);
				this.SendPropertyChanging();
				this._Linkedin = value;
				this.SendPropertyChanged("Linkedin");
				this.OnLinkedinChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="NVarChar(MAX)")]
	public string Skype
	{
		get
		{
			return this._Skype;
		}
		set
		{
			if ((this._Skype != value))
			{
				this.OnSkypeChanging(value);
				this.SendPropertyChanging();
				this._Skype = value;
				this.SendPropertyChanged("Skype");
				this.OnSkypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> LoginDate
	{
		get
		{
			return this._LoginDate;
		}
		set
		{
			if ((this._LoginDate != value))
			{
				this.OnLoginDateChanging(value);
				this.SendPropertyChanging();
				this._LoginDate = value;
				this.SendPropertyChanged("LoginDate");
				this.OnLoginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoutDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> LogoutDate
	{
		get
		{
			return this._LogoutDate;
		}
		set
		{
			if ((this._LogoutDate != value))
			{
				this.OnLogoutDateChanging(value);
				this.SendPropertyChanging();
				this._LogoutDate = value;
				this.SendPropertyChanged("LogoutDate");
				this.OnLogoutDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(50)")]
	public string Ip
	{
		get
		{
			return this._Ip;
		}
		set
		{
			if ((this._Ip != value))
			{
				this.OnIpChanging(value);
				this.SendPropertyChanging();
				this._Ip = value;
				this.SendPropertyChanged("Ip");
				this.OnIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit")]
	public System.Nullable<bool> EmailConfirmed
	{
		get
		{
			return this._EmailConfirmed;
		}
		set
		{
			if ((this._EmailConfirmed != value))
			{
				this.OnEmailConfirmedChanging(value);
				this.SendPropertyChanging();
				this._EmailConfirmed = value;
				this.SendPropertyChanged("EmailConfirmed");
				this.OnEmailConfirmedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int")]
	public System.Nullable<int> AccessFailedCount
	{
		get
		{
			return this._AccessFailedCount;
		}
		set
		{
			if ((this._AccessFailedCount != value))
			{
				this.OnAccessFailedCountChanging(value);
				this.SendPropertyChanging();
				this._AccessFailedCount = value;
				this.SendPropertyChanged("AccessFailedCount");
				this.OnAccessFailedCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileConfirmed", DbType="Bit")]
	public System.Nullable<bool> MobileConfirmed
	{
		get
		{
			return this._MobileConfirmed;
		}
		set
		{
			if ((this._MobileConfirmed != value))
			{
				this.OnMobileConfirmedChanging(value);
				this.SendPropertyChanging();
				this._MobileConfirmed = value;
				this.SendPropertyChanged("MobileConfirmed");
				this.OnMobileConfirmedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePassRequestCode", DbType="NVarChar(MAX)")]
	public string ChangePassRequestCode
	{
		get
		{
			return this._ChangePassRequestCode;
		}
		set
		{
			if ((this._ChangePassRequestCode != value))
			{
				this.OnChangePassRequestCodeChanging(value);
				this.SendPropertyChanging();
				this._ChangePassRequestCode = value;
				this.SendPropertyChanged("ChangePassRequestCode");
				this.OnChangePassRequestCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePassRequestDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ChangePassRequestDate
	{
		get
		{
			return this._ChangePassRequestDate;
		}
		set
		{
			if ((this._ChangePassRequestDate != value))
			{
				this.OnChangePassRequestDateChanging(value);
				this.SendPropertyChanging();
				this._ChangePassRequestDate = value;
				this.SendPropertyChanged("ChangePassRequestDate");
				this.OnChangePassRequestDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt")]
	public System.Nullable<long> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				this.OnParentIDChanging(value);
				this.SendPropertyChanging();
				this._ParentID = value;
				this.SendPropertyChanged("ParentID");
				this.OnParentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNumber", DbType="NVarChar(MAX)")]
	public string CardNumber
	{
		get
		{
			return this._CardNumber;
		}
		set
		{
			if ((this._CardNumber != value))
			{
				this.OnCardNumberChanging(value);
				this.SendPropertyChanging();
				this._CardNumber = value;
				this.SendPropertyChanged("CardNumber");
				this.OnCardNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(MAX)")]
	public string AccountNumber
	{
		get
		{
			return this._AccountNumber;
		}
		set
		{
			if ((this._AccountNumber != value))
			{
				this.OnAccountNumberChanging(value);
				this.SendPropertyChanging();
				this._AccountNumber = value;
				this.SendPropertyChanged("AccountNumber");
				this.OnAccountNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="BigInt")]
	public System.Nullable<long> EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegUserID", DbType="BigInt")]
	public System.Nullable<long> RegUserID
	{
		get
		{
			return this._RegUserID;
		}
		set
		{
			if ((this._RegUserID != value))
			{
				this.OnRegUserIDChanging(value);
				this.SendPropertyChanging();
				this._RegUserID = value;
				this.SendPropertyChanged("RegUserID");
				this.OnRegUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTable_PermissionTable", Storage="_PermissionTables", ThisKey="Id", OtherKey="UserID")]
	public EntitySet<PermissionTable> PermissionTables
	{
		get
		{
			return this._PermissionTables;
		}
		set
		{
			this._PermissionTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTable_UserGroupAccessTable", Storage="_UserGroupAccessTables", ThisKey="Id", OtherKey="UserID")]
	public EntitySet<UserGroupAccessTable> UserGroupAccessTables
	{
		get
		{
			return this._UserGroupAccessTables;
		}
		set
		{
			this._UserGroupAccessTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTable_WalletTable", Storage="_WalletTables", ThisKey="Id", OtherKey="UserID")]
	public EntitySet<WalletTable> WalletTables
	{
		get
		{
			return this._WalletTables;
		}
		set
		{
			this._WalletTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.UserTable = this;
	}
	
	private void detach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.UserTable = null;
	}
	
	private void attach_UserGroupAccessTables(UserGroupAccessTable entity)
	{
		this.SendPropertyChanging();
		entity.UserTable = this;
	}
	
	private void detach_UserGroupAccessTables(UserGroupAccessTable entity)
	{
		this.SendPropertyChanging();
		entity.UserTable = null;
	}
	
	private void attach_WalletTables(WalletTable entity)
	{
		this.SendPropertyChanging();
		entity.UserTable = this;
	}
	
	private void detach_WalletTables(WalletTable entity)
	{
		this.SendPropertyChanging();
		entity.UserTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitorTable")]
public partial class VisitorTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Ip;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _BrowserName;
	
	private string _BrowserVersion;
	
	private string _Platform;
	
	private string _ScreenSize;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnBrowserNameChanging(string value);
    partial void OnBrowserNameChanged();
    partial void OnBrowserVersionChanging(string value);
    partial void OnBrowserVersionChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnScreenSizeChanging(string value);
    partial void OnScreenSizeChanged();
    #endregion
	
	public VisitorTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(50)")]
	public string Ip
	{
		get
		{
			return this._Ip;
		}
		set
		{
			if ((this._Ip != value))
			{
				this.OnIpChanging(value);
				this.SendPropertyChanging();
				this._Ip = value;
				this.SendPropertyChanged("Ip");
				this.OnIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowserName", DbType="NVarChar(MAX)")]
	public string BrowserName
	{
		get
		{
			return this._BrowserName;
		}
		set
		{
			if ((this._BrowserName != value))
			{
				this.OnBrowserNameChanging(value);
				this.SendPropertyChanging();
				this._BrowserName = value;
				this.SendPropertyChanged("BrowserName");
				this.OnBrowserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowserVersion", DbType="NVarChar(MAX)")]
	public string BrowserVersion
	{
		get
		{
			return this._BrowserVersion;
		}
		set
		{
			if ((this._BrowserVersion != value))
			{
				this.OnBrowserVersionChanging(value);
				this.SendPropertyChanging();
				this._BrowserVersion = value;
				this.SendPropertyChanged("BrowserVersion");
				this.OnBrowserVersionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="NVarChar(MAX)")]
	public string Platform
	{
		get
		{
			return this._Platform;
		}
		set
		{
			if ((this._Platform != value))
			{
				this.OnPlatformChanging(value);
				this.SendPropertyChanging();
				this._Platform = value;
				this.SendPropertyChanged("Platform");
				this.OnPlatformChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenSize", DbType="NVarChar(MAX)")]
	public string ScreenSize
	{
		get
		{
			return this._ScreenSize;
		}
		set
		{
			if ((this._ScreenSize != value))
			{
				this.OnScreenSizeChanging(value);
				this.SendPropertyChanging();
				this._ScreenSize = value;
				this.SendPropertyChanged("ScreenSize");
				this.OnScreenSizeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebsiteSettingTable")]
public partial class WebsiteSettingTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Address1;
	
	private string _Address2;
	
	private string _Address3;
	
	private string _Tel1;
	
	private string _Tel2;
	
	private string _Tel3;
	
	private string _Mobile1;
	
	private string _Mobile2;
	
	private string _Mobile3;
	
	private string _Email1;
	
	private string _Email2;
	
	private string _Email3;
	
	private string _Facebook;
	
	private string _Twitter;
	
	private string _GooglePlus;
	
	private string _Instagram;
	
	private string _Linkedin;
	
	private string _Github;
	
	private string _Skype;
	
	private string _Viber;
	
	private string _HeaderImage1;
	
	private string _HeaderImage2;
	
	private string _Logo1;
	
	private string _Logo2;
	
	private string _FooterImage1;
	
	private string _FooterImage2;
	
	private string _HeaderTitle;
	
	private string _FooterDescription;
	
	private string _CopyRightText;
	
	private string _CopyRightYear;
	
	private System.Nullable<bool> _TameshkSibcheStatus;
	
	private System.Nullable<long> _LanguageID;
	
	private System.Nullable<long> _PublicGift;
	
	private System.Nullable<long> _MoarefGift;
	
	private string _Roles1;
	
	private string _Roles2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnTel1Changing(string value);
    partial void OnTel1Changed();
    partial void OnTel2Changing(string value);
    partial void OnTel2Changed();
    partial void OnTel3Changing(string value);
    partial void OnTel3Changed();
    partial void OnMobile1Changing(string value);
    partial void OnMobile1Changed();
    partial void OnMobile2Changing(string value);
    partial void OnMobile2Changed();
    partial void OnMobile3Changing(string value);
    partial void OnMobile3Changed();
    partial void OnEmail1Changing(string value);
    partial void OnEmail1Changed();
    partial void OnEmail2Changing(string value);
    partial void OnEmail2Changed();
    partial void OnEmail3Changing(string value);
    partial void OnEmail3Changed();
    partial void OnFacebookChanging(string value);
    partial void OnFacebookChanged();
    partial void OnTwitterChanging(string value);
    partial void OnTwitterChanged();
    partial void OnGooglePlusChanging(string value);
    partial void OnGooglePlusChanged();
    partial void OnInstagramChanging(string value);
    partial void OnInstagramChanged();
    partial void OnLinkedinChanging(string value);
    partial void OnLinkedinChanged();
    partial void OnGithubChanging(string value);
    partial void OnGithubChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnViberChanging(string value);
    partial void OnViberChanged();
    partial void OnHeaderImage1Changing(string value);
    partial void OnHeaderImage1Changed();
    partial void OnHeaderImage2Changing(string value);
    partial void OnHeaderImage2Changed();
    partial void OnLogo1Changing(string value);
    partial void OnLogo1Changed();
    partial void OnLogo2Changing(string value);
    partial void OnLogo2Changed();
    partial void OnFooterImage1Changing(string value);
    partial void OnFooterImage1Changed();
    partial void OnFooterImage2Changing(string value);
    partial void OnFooterImage2Changed();
    partial void OnHeaderTitleChanging(string value);
    partial void OnHeaderTitleChanged();
    partial void OnFooterDescriptionChanging(string value);
    partial void OnFooterDescriptionChanged();
    partial void OnCopyRightTextChanging(string value);
    partial void OnCopyRightTextChanged();
    partial void OnCopyRightYearChanging(string value);
    partial void OnCopyRightYearChanged();
    partial void OnTameshkSibcheStatusChanging(System.Nullable<bool> value);
    partial void OnTameshkSibcheStatusChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnPublicGiftChanging(System.Nullable<long> value);
    partial void OnPublicGiftChanged();
    partial void OnMoarefGiftChanging(System.Nullable<long> value);
    partial void OnMoarefGiftChanged();
    partial void OnRoles1Changing(string value);
    partial void OnRoles1Changed();
    partial void OnRoles2Changing(string value);
    partial void OnRoles2Changed();
    #endregion
	
	public WebsiteSettingTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(MAX)")]
	public string Address1
	{
		get
		{
			return this._Address1;
		}
		set
		{
			if ((this._Address1 != value))
			{
				this.OnAddress1Changing(value);
				this.SendPropertyChanging();
				this._Address1 = value;
				this.SendPropertyChanged("Address1");
				this.OnAddress1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(MAX)")]
	public string Address2
	{
		get
		{
			return this._Address2;
		}
		set
		{
			if ((this._Address2 != value))
			{
				this.OnAddress2Changing(value);
				this.SendPropertyChanging();
				this._Address2 = value;
				this.SendPropertyChanged("Address2");
				this.OnAddress2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="NVarChar(MAX)")]
	public string Address3
	{
		get
		{
			return this._Address3;
		}
		set
		{
			if ((this._Address3 != value))
			{
				this.OnAddress3Changing(value);
				this.SendPropertyChanging();
				this._Address3 = value;
				this.SendPropertyChanged("Address3");
				this.OnAddress3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel1", DbType="NVarChar(MAX)")]
	public string Tel1
	{
		get
		{
			return this._Tel1;
		}
		set
		{
			if ((this._Tel1 != value))
			{
				this.OnTel1Changing(value);
				this.SendPropertyChanging();
				this._Tel1 = value;
				this.SendPropertyChanged("Tel1");
				this.OnTel1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel2", DbType="NVarChar(MAX)")]
	public string Tel2
	{
		get
		{
			return this._Tel2;
		}
		set
		{
			if ((this._Tel2 != value))
			{
				this.OnTel2Changing(value);
				this.SendPropertyChanging();
				this._Tel2 = value;
				this.SendPropertyChanged("Tel2");
				this.OnTel2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel3", DbType="NVarChar(MAX)")]
	public string Tel3
	{
		get
		{
			return this._Tel3;
		}
		set
		{
			if ((this._Tel3 != value))
			{
				this.OnTel3Changing(value);
				this.SendPropertyChanging();
				this._Tel3 = value;
				this.SendPropertyChanged("Tel3");
				this.OnTel3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1", DbType="NVarChar(MAX)")]
	public string Mobile1
	{
		get
		{
			return this._Mobile1;
		}
		set
		{
			if ((this._Mobile1 != value))
			{
				this.OnMobile1Changing(value);
				this.SendPropertyChanging();
				this._Mobile1 = value;
				this.SendPropertyChanged("Mobile1");
				this.OnMobile1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2", DbType="NVarChar(MAX)")]
	public string Mobile2
	{
		get
		{
			return this._Mobile2;
		}
		set
		{
			if ((this._Mobile2 != value))
			{
				this.OnMobile2Changing(value);
				this.SendPropertyChanging();
				this._Mobile2 = value;
				this.SendPropertyChanged("Mobile2");
				this.OnMobile2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile3", DbType="NVarChar(MAX)")]
	public string Mobile3
	{
		get
		{
			return this._Mobile3;
		}
		set
		{
			if ((this._Mobile3 != value))
			{
				this.OnMobile3Changing(value);
				this.SendPropertyChanging();
				this._Mobile3 = value;
				this.SendPropertyChanged("Mobile3");
				this.OnMobile3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email1", DbType="NVarChar(MAX)")]
	public string Email1
	{
		get
		{
			return this._Email1;
		}
		set
		{
			if ((this._Email1 != value))
			{
				this.OnEmail1Changing(value);
				this.SendPropertyChanging();
				this._Email1 = value;
				this.SendPropertyChanged("Email1");
				this.OnEmail1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email2", DbType="NVarChar(MAX)")]
	public string Email2
	{
		get
		{
			return this._Email2;
		}
		set
		{
			if ((this._Email2 != value))
			{
				this.OnEmail2Changing(value);
				this.SendPropertyChanging();
				this._Email2 = value;
				this.SendPropertyChanged("Email2");
				this.OnEmail2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email3", DbType="NVarChar(MAX)")]
	public string Email3
	{
		get
		{
			return this._Email3;
		}
		set
		{
			if ((this._Email3 != value))
			{
				this.OnEmail3Changing(value);
				this.SendPropertyChanging();
				this._Email3 = value;
				this.SendPropertyChanged("Email3");
				this.OnEmail3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facebook", DbType="NVarChar(MAX)")]
	public string Facebook
	{
		get
		{
			return this._Facebook;
		}
		set
		{
			if ((this._Facebook != value))
			{
				this.OnFacebookChanging(value);
				this.SendPropertyChanging();
				this._Facebook = value;
				this.SendPropertyChanged("Facebook");
				this.OnFacebookChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Twitter", DbType="NVarChar(MAX)")]
	public string Twitter
	{
		get
		{
			return this._Twitter;
		}
		set
		{
			if ((this._Twitter != value))
			{
				this.OnTwitterChanging(value);
				this.SendPropertyChanging();
				this._Twitter = value;
				this.SendPropertyChanged("Twitter");
				this.OnTwitterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GooglePlus", DbType="NVarChar(MAX)")]
	public string GooglePlus
	{
		get
		{
			return this._GooglePlus;
		}
		set
		{
			if ((this._GooglePlus != value))
			{
				this.OnGooglePlusChanging(value);
				this.SendPropertyChanging();
				this._GooglePlus = value;
				this.SendPropertyChanged("GooglePlus");
				this.OnGooglePlusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instagram", DbType="NVarChar(MAX)")]
	public string Instagram
	{
		get
		{
			return this._Instagram;
		}
		set
		{
			if ((this._Instagram != value))
			{
				this.OnInstagramChanging(value);
				this.SendPropertyChanging();
				this._Instagram = value;
				this.SendPropertyChanged("Instagram");
				this.OnInstagramChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Linkedin", DbType="NVarChar(MAX)")]
	public string Linkedin
	{
		get
		{
			return this._Linkedin;
		}
		set
		{
			if ((this._Linkedin != value))
			{
				this.OnLinkedinChanging(value);
				this.SendPropertyChanging();
				this._Linkedin = value;
				this.SendPropertyChanged("Linkedin");
				this.OnLinkedinChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Github", DbType="NVarChar(MAX)")]
	public string Github
	{
		get
		{
			return this._Github;
		}
		set
		{
			if ((this._Github != value))
			{
				this.OnGithubChanging(value);
				this.SendPropertyChanging();
				this._Github = value;
				this.SendPropertyChanged("Github");
				this.OnGithubChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="NVarChar(MAX)")]
	public string Skype
	{
		get
		{
			return this._Skype;
		}
		set
		{
			if ((this._Skype != value))
			{
				this.OnSkypeChanging(value);
				this.SendPropertyChanging();
				this._Skype = value;
				this.SendPropertyChanged("Skype");
				this.OnSkypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viber", DbType="NVarChar(MAX)")]
	public string Viber
	{
		get
		{
			return this._Viber;
		}
		set
		{
			if ((this._Viber != value))
			{
				this.OnViberChanging(value);
				this.SendPropertyChanging();
				this._Viber = value;
				this.SendPropertyChanged("Viber");
				this.OnViberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderImage1", DbType="NVarChar(MAX)")]
	public string HeaderImage1
	{
		get
		{
			return this._HeaderImage1;
		}
		set
		{
			if ((this._HeaderImage1 != value))
			{
				this.OnHeaderImage1Changing(value);
				this.SendPropertyChanging();
				this._HeaderImage1 = value;
				this.SendPropertyChanged("HeaderImage1");
				this.OnHeaderImage1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderImage2", DbType="NVarChar(MAX)")]
	public string HeaderImage2
	{
		get
		{
			return this._HeaderImage2;
		}
		set
		{
			if ((this._HeaderImage2 != value))
			{
				this.OnHeaderImage2Changing(value);
				this.SendPropertyChanging();
				this._HeaderImage2 = value;
				this.SendPropertyChanged("HeaderImage2");
				this.OnHeaderImage2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo1", DbType="NVarChar(MAX)")]
	public string Logo1
	{
		get
		{
			return this._Logo1;
		}
		set
		{
			if ((this._Logo1 != value))
			{
				this.OnLogo1Changing(value);
				this.SendPropertyChanging();
				this._Logo1 = value;
				this.SendPropertyChanged("Logo1");
				this.OnLogo1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo2", DbType="NVarChar(MAX)")]
	public string Logo2
	{
		get
		{
			return this._Logo2;
		}
		set
		{
			if ((this._Logo2 != value))
			{
				this.OnLogo2Changing(value);
				this.SendPropertyChanging();
				this._Logo2 = value;
				this.SendPropertyChanged("Logo2");
				this.OnLogo2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FooterImage1", DbType="NVarChar(MAX)")]
	public string FooterImage1
	{
		get
		{
			return this._FooterImage1;
		}
		set
		{
			if ((this._FooterImage1 != value))
			{
				this.OnFooterImage1Changing(value);
				this.SendPropertyChanging();
				this._FooterImage1 = value;
				this.SendPropertyChanged("FooterImage1");
				this.OnFooterImage1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FooterImage2", DbType="NVarChar(MAX)")]
	public string FooterImage2
	{
		get
		{
			return this._FooterImage2;
		}
		set
		{
			if ((this._FooterImage2 != value))
			{
				this.OnFooterImage2Changing(value);
				this.SendPropertyChanging();
				this._FooterImage2 = value;
				this.SendPropertyChanged("FooterImage2");
				this.OnFooterImage2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderTitle", DbType="NVarChar(MAX)")]
	public string HeaderTitle
	{
		get
		{
			return this._HeaderTitle;
		}
		set
		{
			if ((this._HeaderTitle != value))
			{
				this.OnHeaderTitleChanging(value);
				this.SendPropertyChanging();
				this._HeaderTitle = value;
				this.SendPropertyChanged("HeaderTitle");
				this.OnHeaderTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FooterDescription", DbType="NVarChar(MAX)")]
	public string FooterDescription
	{
		get
		{
			return this._FooterDescription;
		}
		set
		{
			if ((this._FooterDescription != value))
			{
				this.OnFooterDescriptionChanging(value);
				this.SendPropertyChanging();
				this._FooterDescription = value;
				this.SendPropertyChanged("FooterDescription");
				this.OnFooterDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopyRightText", DbType="NVarChar(MAX)")]
	public string CopyRightText
	{
		get
		{
			return this._CopyRightText;
		}
		set
		{
			if ((this._CopyRightText != value))
			{
				this.OnCopyRightTextChanging(value);
				this.SendPropertyChanging();
				this._CopyRightText = value;
				this.SendPropertyChanged("CopyRightText");
				this.OnCopyRightTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopyRightYear", DbType="NVarChar(MAX)")]
	public string CopyRightYear
	{
		get
		{
			return this._CopyRightYear;
		}
		set
		{
			if ((this._CopyRightYear != value))
			{
				this.OnCopyRightYearChanging(value);
				this.SendPropertyChanging();
				this._CopyRightYear = value;
				this.SendPropertyChanged("CopyRightYear");
				this.OnCopyRightYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TameshkSibcheStatus", DbType="Bit")]
	public System.Nullable<bool> TameshkSibcheStatus
	{
		get
		{
			return this._TameshkSibcheStatus;
		}
		set
		{
			if ((this._TameshkSibcheStatus != value))
			{
				this.OnTameshkSibcheStatusChanging(value);
				this.SendPropertyChanging();
				this._TameshkSibcheStatus = value;
				this.SendPropertyChanged("TameshkSibcheStatus");
				this.OnTameshkSibcheStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicGift", DbType="BigInt")]
	public System.Nullable<long> PublicGift
	{
		get
		{
			return this._PublicGift;
		}
		set
		{
			if ((this._PublicGift != value))
			{
				this.OnPublicGiftChanging(value);
				this.SendPropertyChanging();
				this._PublicGift = value;
				this.SendPropertyChanged("PublicGift");
				this.OnPublicGiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoarefGift", DbType="BigInt")]
	public System.Nullable<long> MoarefGift
	{
		get
		{
			return this._MoarefGift;
		}
		set
		{
			if ((this._MoarefGift != value))
			{
				this.OnMoarefGiftChanging(value);
				this.SendPropertyChanging();
				this._MoarefGift = value;
				this.SendPropertyChanged("MoarefGift");
				this.OnMoarefGiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roles1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Roles1
	{
		get
		{
			return this._Roles1;
		}
		set
		{
			if ((this._Roles1 != value))
			{
				this.OnRoles1Changing(value);
				this.SendPropertyChanging();
				this._Roles1 = value;
				this.SendPropertyChanged("Roles1");
				this.OnRoles1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roles2", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Roles2
	{
		get
		{
			return this._Roles2;
		}
		set
		{
			if ((this._Roles2 != value))
			{
				this.OnRoles2Changing(value);
				this.SendPropertyChanging();
				this._Roles2 = value;
				this.SendPropertyChanged("Roles2");
				this.OnRoles2Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebUserTable")]
public partial class WebUserTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Family;
	
	private string _Father;
	
	private string _CodeMeli;
	
	private string _ShomareSh;
	
	private string _BirthhDay;
	
	private string _Tel;
	
	private string _Mobile;
	
	private string _Email;
	
	private string _Address;
	
	private string _ZipCode;
	
	private string _TelOwnerName;
	
	private string _Username;
	
	private string _Password;
	
	private string _Ip;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private System.Nullable<bool> _VerifyEmail;
	
	private System.Nullable<bool> _VerifyMobile;
	
	private string _VerifyCode;
	
	private System.Nullable<byte> _VerifyExpire;
	
	private System.Nullable<byte> _Kind;
	
	private System.Nullable<bool> _Gender;
	
	private string _ImageUrl;
	
	private System.Nullable<int> _AccountID;
	
	private System.Nullable<long> _ParentID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnFatherChanging(string value);
    partial void OnFatherChanged();
    partial void OnCodeMeliChanging(string value);
    partial void OnCodeMeliChanged();
    partial void OnShomareShChanging(string value);
    partial void OnShomareShChanged();
    partial void OnBirthhDayChanging(string value);
    partial void OnBirthhDayChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnTelOwnerNameChanging(string value);
    partial void OnTelOwnerNameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnVerifyEmailChanging(System.Nullable<bool> value);
    partial void OnVerifyEmailChanged();
    partial void OnVerifyMobileChanging(System.Nullable<bool> value);
    partial void OnVerifyMobileChanged();
    partial void OnVerifyCodeChanging(string value);
    partial void OnVerifyCodeChanged();
    partial void OnVerifyExpireChanging(System.Nullable<byte> value);
    partial void OnVerifyExpireChanged();
    partial void OnKindChanging(System.Nullable<byte> value);
    partial void OnKindChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnParentIDChanging(System.Nullable<long> value);
    partial void OnParentIDChanged();
    #endregion
	
	public WebUserTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(MAX)")]
	public string Family
	{
		get
		{
			return this._Family;
		}
		set
		{
			if ((this._Family != value))
			{
				this.OnFamilyChanging(value);
				this.SendPropertyChanging();
				this._Family = value;
				this.SendPropertyChanged("Family");
				this.OnFamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Father", DbType="NVarChar(MAX)")]
	public string Father
	{
		get
		{
			return this._Father;
		}
		set
		{
			if ((this._Father != value))
			{
				this.OnFatherChanging(value);
				this.SendPropertyChanging();
				this._Father = value;
				this.SendPropertyChanged("Father");
				this.OnFatherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeMeli", DbType="NVarChar(MAX)")]
	public string CodeMeli
	{
		get
		{
			return this._CodeMeli;
		}
		set
		{
			if ((this._CodeMeli != value))
			{
				this.OnCodeMeliChanging(value);
				this.SendPropertyChanging();
				this._CodeMeli = value;
				this.SendPropertyChanged("CodeMeli");
				this.OnCodeMeliChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShomareSh", DbType="NVarChar(MAX)")]
	public string ShomareSh
	{
		get
		{
			return this._ShomareSh;
		}
		set
		{
			if ((this._ShomareSh != value))
			{
				this.OnShomareShChanging(value);
				this.SendPropertyChanging();
				this._ShomareSh = value;
				this.SendPropertyChanged("ShomareSh");
				this.OnShomareShChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthhDay", DbType="NVarChar(MAX)")]
	public string BirthhDay
	{
		get
		{
			return this._BirthhDay;
		}
		set
		{
			if ((this._BirthhDay != value))
			{
				this.OnBirthhDayChanging(value);
				this.SendPropertyChanging();
				this._BirthhDay = value;
				this.SendPropertyChanged("BirthhDay");
				this.OnBirthhDayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(MAX)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(MAX)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(MAX)")]
	public string ZipCode
	{
		get
		{
			return this._ZipCode;
		}
		set
		{
			if ((this._ZipCode != value))
			{
				this.OnZipCodeChanging(value);
				this.SendPropertyChanging();
				this._ZipCode = value;
				this.SendPropertyChanged("ZipCode");
				this.OnZipCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelOwnerName", DbType="NVarChar(MAX)")]
	public string TelOwnerName
	{
		get
		{
			return this._TelOwnerName;
		}
		set
		{
			if ((this._TelOwnerName != value))
			{
				this.OnTelOwnerNameChanging(value);
				this.SendPropertyChanging();
				this._TelOwnerName = value;
				this.SendPropertyChanged("TelOwnerName");
				this.OnTelOwnerNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(MAX)")]
	public string Ip
	{
		get
		{
			return this._Ip;
		}
		set
		{
			if ((this._Ip != value))
			{
				this.OnIpChanging(value);
				this.SendPropertyChanging();
				this._Ip = value;
				this.SendPropertyChanged("Ip");
				this.OnIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyEmail", DbType="Bit")]
	public System.Nullable<bool> VerifyEmail
	{
		get
		{
			return this._VerifyEmail;
		}
		set
		{
			if ((this._VerifyEmail != value))
			{
				this.OnVerifyEmailChanging(value);
				this.SendPropertyChanging();
				this._VerifyEmail = value;
				this.SendPropertyChanged("VerifyEmail");
				this.OnVerifyEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyMobile", DbType="Bit")]
	public System.Nullable<bool> VerifyMobile
	{
		get
		{
			return this._VerifyMobile;
		}
		set
		{
			if ((this._VerifyMobile != value))
			{
				this.OnVerifyMobileChanging(value);
				this.SendPropertyChanging();
				this._VerifyMobile = value;
				this.SendPropertyChanged("VerifyMobile");
				this.OnVerifyMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCode", DbType="NVarChar(MAX)")]
	public string VerifyCode
	{
		get
		{
			return this._VerifyCode;
		}
		set
		{
			if ((this._VerifyCode != value))
			{
				this.OnVerifyCodeChanging(value);
				this.SendPropertyChanging();
				this._VerifyCode = value;
				this.SendPropertyChanged("VerifyCode");
				this.OnVerifyCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyExpire", DbType="TinyInt")]
	public System.Nullable<byte> VerifyExpire
	{
		get
		{
			return this._VerifyExpire;
		}
		set
		{
			if ((this._VerifyExpire != value))
			{
				this.OnVerifyExpireChanging(value);
				this.SendPropertyChanging();
				this._VerifyExpire = value;
				this.SendPropertyChanged("VerifyExpire");
				this.OnVerifyExpireChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="TinyInt")]
	public System.Nullable<byte> Kind
	{
		get
		{
			return this._Kind;
		}
		set
		{
			if ((this._Kind != value))
			{
				this.OnKindChanging(value);
				this.SendPropertyChanging();
				this._Kind = value;
				this.SendPropertyChanged("Kind");
				this.OnKindChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
	public System.Nullable<bool> Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(MAX)")]
	public string ImageUrl
	{
		get
		{
			return this._ImageUrl;
		}
		set
		{
			if ((this._ImageUrl != value))
			{
				this.OnImageUrlChanging(value);
				this.SendPropertyChanging();
				this._ImageUrl = value;
				this.SendPropertyChanged("ImageUrl");
				this.OnImageUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int")]
	public System.Nullable<int> AccountID
	{
		get
		{
			return this._AccountID;
		}
		set
		{
			if ((this._AccountID != value))
			{
				this.OnAccountIDChanging(value);
				this.SendPropertyChanging();
				this._AccountID = value;
				this.SendPropertyChanged("AccountID");
				this.OnAccountIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt")]
	public System.Nullable<long> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				this.OnParentIDChanging(value);
				this.SendPropertyChanging();
				this._ParentID = value;
				this.SendPropertyChanged("ParentID");
				this.OnParentIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccountTypeTable")]
public partial class UserAccountTypeTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Description;
	
	private System.Nullable<int> _QuestionCount;
	
	private System.Nullable<byte> _Discount;
	
	private System.Nullable<bool> _IsExpert;
	
	private System.Nullable<bool> _Visibility;
	
	private string _Ip;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<int> _ExpireDate;
	
	private System.Nullable<long> _Price;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQuestionCountChanging(System.Nullable<int> value);
    partial void OnQuestionCountChanged();
    partial void OnDiscountChanging(System.Nullable<byte> value);
    partial void OnDiscountChanged();
    partial void OnIsExpertChanging(System.Nullable<bool> value);
    partial void OnIsExpertChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnExpireDateChanging(System.Nullable<int> value);
    partial void OnExpireDateChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    #endregion
	
	public UserAccountTypeTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionCount", DbType="Int")]
	public System.Nullable<int> QuestionCount
	{
		get
		{
			return this._QuestionCount;
		}
		set
		{
			if ((this._QuestionCount != value))
			{
				this.OnQuestionCountChanging(value);
				this.SendPropertyChanging();
				this._QuestionCount = value;
				this.SendPropertyChanged("QuestionCount");
				this.OnQuestionCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="TinyInt")]
	public System.Nullable<byte> Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExpert", DbType="Bit")]
	public System.Nullable<bool> IsExpert
	{
		get
		{
			return this._IsExpert;
		}
		set
		{
			if ((this._IsExpert != value))
			{
				this.OnIsExpertChanging(value);
				this.SendPropertyChanging();
				this._IsExpert = value;
				this.SendPropertyChanged("IsExpert");
				this.OnIsExpertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(50)")]
	public string Ip
	{
		get
		{
			return this._Ip;
		}
		set
		{
			if ((this._Ip != value))
			{
				this.OnIpChanging(value);
				this.SendPropertyChanging();
				this._Ip = value;
				this.SendPropertyChanged("Ip");
				this.OnIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="Int")]
	public System.Nullable<int> ExpireDate
	{
		get
		{
			return this._ExpireDate;
		}
		set
		{
			if ((this._ExpireDate != value))
			{
				this.OnExpireDateChanging(value);
				this.SendPropertyChanging();
				this._ExpireDate = value;
				this.SendPropertyChanged("ExpireDate");
				this.OnExpireDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
	public System.Nullable<long> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WalletTable")]
public partial class WalletTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _Input;
	
	private System.Nullable<long> _Output;
	
	private string _InputWay;
	
	private string _OutputWay;
	
	private System.Nullable<System.DateTime> _OccurDate;
	
	private System.Nullable<long> _Balance;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<long> _FactorID;
	
	private System.Nullable<long> _ProductID;
	
	private EntityRef<UserTable> _UserTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnInputChanging(System.Nullable<long> value);
    partial void OnInputChanged();
    partial void OnOutputChanging(System.Nullable<long> value);
    partial void OnOutputChanged();
    partial void OnInputWayChanging(string value);
    partial void OnInputWayChanged();
    partial void OnOutputWayChanging(string value);
    partial void OnOutputWayChanged();
    partial void OnOccurDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOccurDateChanged();
    partial void OnBalanceChanging(System.Nullable<long> value);
    partial void OnBalanceChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnFactorIDChanging(System.Nullable<long> value);
    partial void OnFactorIDChanged();
    partial void OnProductIDChanging(System.Nullable<long> value);
    partial void OnProductIDChanged();
    #endregion
	
	public WalletTable()
	{
		this._UserTable = default(EntityRef<UserTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Input", DbType="BigInt")]
	public System.Nullable<long> Input
	{
		get
		{
			return this._Input;
		}
		set
		{
			if ((this._Input != value))
			{
				this.OnInputChanging(value);
				this.SendPropertyChanging();
				this._Input = value;
				this.SendPropertyChanged("Input");
				this.OnInputChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Output", DbType="BigInt")]
	public System.Nullable<long> Output
	{
		get
		{
			return this._Output;
		}
		set
		{
			if ((this._Output != value))
			{
				this.OnOutputChanging(value);
				this.SendPropertyChanging();
				this._Output = value;
				this.SendPropertyChanged("Output");
				this.OnOutputChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputWay", DbType="NVarChar(MAX)")]
	public string InputWay
	{
		get
		{
			return this._InputWay;
		}
		set
		{
			if ((this._InputWay != value))
			{
				this.OnInputWayChanging(value);
				this.SendPropertyChanging();
				this._InputWay = value;
				this.SendPropertyChanged("InputWay");
				this.OnInputWayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputWay", DbType="NVarChar(MAX)")]
	public string OutputWay
	{
		get
		{
			return this._OutputWay;
		}
		set
		{
			if ((this._OutputWay != value))
			{
				this.OnOutputWayChanging(value);
				this.SendPropertyChanging();
				this._OutputWay = value;
				this.SendPropertyChanged("OutputWay");
				this.OnOutputWayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccurDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> OccurDate
	{
		get
		{
			return this._OccurDate;
		}
		set
		{
			if ((this._OccurDate != value))
			{
				this.OnOccurDateChanging(value);
				this.SendPropertyChanging();
				this._OccurDate = value;
				this.SendPropertyChanged("OccurDate");
				this.OnOccurDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="BigInt")]
	public System.Nullable<long> Balance
	{
		get
		{
			return this._Balance;
		}
		set
		{
			if ((this._Balance != value))
			{
				this.OnBalanceChanging(value);
				this.SendPropertyChanging();
				this._Balance = value;
				this.SendPropertyChanged("Balance");
				this.OnBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._UserTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorID", DbType="BigInt")]
	public System.Nullable<long> FactorID
	{
		get
		{
			return this._FactorID;
		}
		set
		{
			if ((this._FactorID != value))
			{
				this.OnFactorIDChanging(value);
				this.SendPropertyChanging();
				this._FactorID = value;
				this.SendPropertyChanged("FactorID");
				this.OnFactorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt")]
	public System.Nullable<long> ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTable_WalletTable", Storage="_UserTable", ThisKey="UserID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public UserTable UserTable
	{
		get
		{
			return this._UserTable.Entity;
		}
		set
		{
			UserTable previousValue = this._UserTable.Entity;
			if (((previousValue != value) 
						|| (this._UserTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserTable.Entity = null;
					previousValue.WalletTables.Remove(this);
				}
				this._UserTable.Entity = value;
				if ((value != null))
				{
					value.WalletTables.Add(this);
					this._UserID = value.Id;
				}
				else
				{
					this._UserID = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlaceTable")]
public partial class PlaceTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<long> _GroupID1;
	
	private string _Logo;
	
	private string _Banner;
	
	private string _Owner;
	
	private string _Description;
	
	private string _Tel;
	
	private string _Fax;
	
	private string _Mobile;
	
	private string _Email;
	
	private string _Website;
	
	private string _Address;
	
	private string _Position;
	
	private string _Facilities;
	
	private string _Services;
	
	private string _WorkTime;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private string _UserIp;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<long> _WebUserID;
	
	private System.Nullable<long> _NumberOfView;
	
	private System.Nullable<byte> _Rate;
	
	private System.Nullable<bool> _Verify;
	
	private System.Nullable<bool> _Visibility;
	
	private System.Nullable<byte> _PackageID;
	
	private System.Nullable<long> _GroupID2;
	
	private System.Nullable<long> _CityID;
	
	private System.Nullable<long> _RegionID;
	
	private EntitySet<PlacePicTable> _PlacePicTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroupID1Changing(System.Nullable<long> value);
    partial void OnGroupID1Changed();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    partial void OnBannerChanging(string value);
    partial void OnBannerChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnFacilitiesChanging(string value);
    partial void OnFacilitiesChanged();
    partial void OnServicesChanging(string value);
    partial void OnServicesChanged();
    partial void OnWorkTimeChanging(string value);
    partial void OnWorkTimeChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnUserIpChanging(string value);
    partial void OnUserIpChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnWebUserIDChanging(System.Nullable<long> value);
    partial void OnWebUserIDChanged();
    partial void OnNumberOfViewChanging(System.Nullable<long> value);
    partial void OnNumberOfViewChanged();
    partial void OnRateChanging(System.Nullable<byte> value);
    partial void OnRateChanged();
    partial void OnVerifyChanging(System.Nullable<bool> value);
    partial void OnVerifyChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnPackageIDChanging(System.Nullable<byte> value);
    partial void OnPackageIDChanged();
    partial void OnGroupID2Changing(System.Nullable<long> value);
    partial void OnGroupID2Changed();
    partial void OnCityIDChanging(System.Nullable<long> value);
    partial void OnCityIDChanged();
    partial void OnRegionIDChanging(System.Nullable<long> value);
    partial void OnRegionIDChanged();
    #endregion
	
	public PlaceTable()
	{
		this._PlacePicTables = new EntitySet<PlacePicTable>(new Action<PlacePicTable>(this.attach_PlacePicTables), new Action<PlacePicTable>(this.detach_PlacePicTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID1", DbType="BigInt")]
	public System.Nullable<long> GroupID1
	{
		get
		{
			return this._GroupID1;
		}
		set
		{
			if ((this._GroupID1 != value))
			{
				this.OnGroupID1Changing(value);
				this.SendPropertyChanging();
				this._GroupID1 = value;
				this.SendPropertyChanged("GroupID1");
				this.OnGroupID1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="NVarChar(MAX)")]
	public string Logo
	{
		get
		{
			return this._Logo;
		}
		set
		{
			if ((this._Logo != value))
			{
				this.OnLogoChanging(value);
				this.SendPropertyChanging();
				this._Logo = value;
				this.SendPropertyChanged("Logo");
				this.OnLogoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banner", DbType="NVarChar(MAX)")]
	public string Banner
	{
		get
		{
			return this._Banner;
		}
		set
		{
			if ((this._Banner != value))
			{
				this.OnBannerChanging(value);
				this.SendPropertyChanging();
				this._Banner = value;
				this.SendPropertyChanged("Banner");
				this.OnBannerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(MAX)")]
	public string Owner
	{
		get
		{
			return this._Owner;
		}
		set
		{
			if ((this._Owner != value))
			{
				this.OnOwnerChanging(value);
				this.SendPropertyChanging();
				this._Owner = value;
				this.SendPropertyChanged("Owner");
				this.OnOwnerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(MAX)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(MAX)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(MAX)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(MAX)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(MAX)")]
	public string Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this.OnPositionChanging(value);
				this.SendPropertyChanging();
				this._Position = value;
				this.SendPropertyChanged("Position");
				this.OnPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facilities", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Facilities
	{
		get
		{
			return this._Facilities;
		}
		set
		{
			if ((this._Facilities != value))
			{
				this.OnFacilitiesChanging(value);
				this.SendPropertyChanging();
				this._Facilities = value;
				this.SendPropertyChanged("Facilities");
				this.OnFacilitiesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Services", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Services
	{
		get
		{
			return this._Services;
		}
		set
		{
			if ((this._Services != value))
			{
				this.OnServicesChanging(value);
				this.SendPropertyChanging();
				this._Services = value;
				this.SendPropertyChanged("Services");
				this.OnServicesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string WorkTime
	{
		get
		{
			return this._WorkTime;
		}
		set
		{
			if ((this._WorkTime != value))
			{
				this.OnWorkTimeChanging(value);
				this.SendPropertyChanging();
				this._WorkTime = value;
				this.SendPropertyChanged("WorkTime");
				this.OnWorkTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIp", DbType="NVarChar(50)")]
	public string UserIp
	{
		get
		{
			return this._UserIp;
		}
		set
		{
			if ((this._UserIp != value))
			{
				this.OnUserIpChanging(value);
				this.SendPropertyChanging();
				this._UserIp = value;
				this.SendPropertyChanged("UserIp");
				this.OnUserIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebUserID", DbType="BigInt")]
	public System.Nullable<long> WebUserID
	{
		get
		{
			return this._WebUserID;
		}
		set
		{
			if ((this._WebUserID != value))
			{
				this.OnWebUserIDChanging(value);
				this.SendPropertyChanging();
				this._WebUserID = value;
				this.SendPropertyChanged("WebUserID");
				this.OnWebUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfView", DbType="BigInt")]
	public System.Nullable<long> NumberOfView
	{
		get
		{
			return this._NumberOfView;
		}
		set
		{
			if ((this._NumberOfView != value))
			{
				this.OnNumberOfViewChanging(value);
				this.SendPropertyChanging();
				this._NumberOfView = value;
				this.SendPropertyChanged("NumberOfView");
				this.OnNumberOfViewChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="TinyInt")]
	public System.Nullable<byte> Rate
	{
		get
		{
			return this._Rate;
		}
		set
		{
			if ((this._Rate != value))
			{
				this.OnRateChanging(value);
				this.SendPropertyChanging();
				this._Rate = value;
				this.SendPropertyChanged("Rate");
				this.OnRateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verify", DbType="Bit")]
	public System.Nullable<bool> Verify
	{
		get
		{
			return this._Verify;
		}
		set
		{
			if ((this._Verify != value))
			{
				this.OnVerifyChanging(value);
				this.SendPropertyChanging();
				this._Verify = value;
				this.SendPropertyChanged("Verify");
				this.OnVerifyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="TinyInt")]
	public System.Nullable<byte> PackageID
	{
		get
		{
			return this._PackageID;
		}
		set
		{
			if ((this._PackageID != value))
			{
				this.OnPackageIDChanging(value);
				this.SendPropertyChanging();
				this._PackageID = value;
				this.SendPropertyChanged("PackageID");
				this.OnPackageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID2", DbType="BigInt")]
	public System.Nullable<long> GroupID2
	{
		get
		{
			return this._GroupID2;
		}
		set
		{
			if ((this._GroupID2 != value))
			{
				this.OnGroupID2Changing(value);
				this.SendPropertyChanging();
				this._GroupID2 = value;
				this.SendPropertyChanged("GroupID2");
				this.OnGroupID2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="BigInt")]
	public System.Nullable<long> CityID
	{
		get
		{
			return this._CityID;
		}
		set
		{
			if ((this._CityID != value))
			{
				this.OnCityIDChanging(value);
				this.SendPropertyChanging();
				this._CityID = value;
				this.SendPropertyChanged("CityID");
				this.OnCityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="BigInt")]
	public System.Nullable<long> RegionID
	{
		get
		{
			return this._RegionID;
		}
		set
		{
			if ((this._RegionID != value))
			{
				this.OnRegionIDChanging(value);
				this.SendPropertyChanging();
				this._RegionID = value;
				this.SendPropertyChanged("RegionID");
				this.OnRegionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlaceTable_PlacePicTable", Storage="_PlacePicTables", ThisKey="Id", OtherKey="PlaceID")]
	public EntitySet<PlacePicTable> PlacePicTables
	{
		get
		{
			return this._PlacePicTables;
		}
		set
		{
			this._PlacePicTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PlacePicTables(PlacePicTable entity)
	{
		this.SendPropertyChanging();
		entity.PlaceTable = this;
	}
	
	private void detach_PlacePicTables(PlacePicTable entity)
	{
		this.SendPropertyChanging();
		entity.PlaceTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsTable")]
public partial class SmsTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Receptor;
	
	private string _Message;
	
	private System.Nullable<long> _GroupID;
	
	private System.Nullable<System.DateTime> _SendDate;
	
	private string _SenderLine;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<int> _MessageType;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnReceptorChanging(string value);
    partial void OnReceptorChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnGroupIDChanging(System.Nullable<long> value);
    partial void OnGroupIDChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnSenderLineChanging(string value);
    partial void OnSenderLineChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnMessageTypeChanging(System.Nullable<int> value);
    partial void OnMessageTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public SmsTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receptor", DbType="NVarChar(MAX)")]
	public string Receptor
	{
		get
		{
			return this._Receptor;
		}
		set
		{
			if ((this._Receptor != value))
			{
				this.OnReceptorChanging(value);
				this.SendPropertyChanging();
				this._Receptor = value;
				this.SendPropertyChanged("Receptor");
				this.OnReceptorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
	public string Message
	{
		get
		{
			return this._Message;
		}
		set
		{
			if ((this._Message != value))
			{
				this.OnMessageChanging(value);
				this.SendPropertyChanging();
				this._Message = value;
				this.SendPropertyChanged("Message");
				this.OnMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="BigInt")]
	public System.Nullable<long> GroupID
	{
		get
		{
			return this._GroupID;
		}
		set
		{
			if ((this._GroupID != value))
			{
				this.OnGroupIDChanging(value);
				this.SendPropertyChanging();
				this._GroupID = value;
				this.SendPropertyChanged("GroupID");
				this.OnGroupIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SendDate
	{
		get
		{
			return this._SendDate;
		}
		set
		{
			if ((this._SendDate != value))
			{
				this.OnSendDateChanging(value);
				this.SendPropertyChanging();
				this._SendDate = value;
				this.SendPropertyChanged("SendDate");
				this.OnSendDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderLine", DbType="NVarChar(MAX)")]
	public string SenderLine
	{
		get
		{
			return this._SenderLine;
		}
		set
		{
			if ((this._SenderLine != value))
			{
				this.OnSenderLineChanging(value);
				this.SendPropertyChanging();
				this._SenderLine = value;
				this.SendPropertyChanged("SenderLine");
				this.OnSenderLineChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageType", DbType="Int")]
	public System.Nullable<int> MessageType
	{
		get
		{
			return this._MessageType;
		}
		set
		{
			if ((this._MessageType != value))
			{
				this.OnMessageTypeChanging(value);
				this.SendPropertyChanging();
				this._MessageType = value;
				this.SendPropertyChanged("MessageType");
				this.OnMessageTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
